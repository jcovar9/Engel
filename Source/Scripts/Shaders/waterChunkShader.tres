[gd_resource type="Shader" format=3 uid="uid://b435qlbfb63ar"]

[resource]
code = "shader_type canvas_item;

uniform int[1000000] chunkHeightData;
uniform int viewSize;
uniform int chunkSize;

void fragment() {
	int x = int(UV.x * float(viewSize));
	int y = int(UV.y * float(viewSize));
	int index = x + y * viewSize;
	if(chunkHeightData[index] == 1){
		COLOR = vec4(0.0,0.4,0.0,1.0);
		if(x / 2 * 2 != x && y / 2 * 2 != y)
		{
			COLOR.b += 0.5;
		}
	}
	else if(chunkHeightData[index] == 2){
		COLOR = vec4(0.0,0.0,0.0,1.0);
	}
	else if(chunkHeightData[index] == 3){
		COLOR = vec4(1.0,0.0,0.0,1.0);
	}
	else{
		
		x -= ((viewSize - chunkSize) / 2);
		y -= ((viewSize - chunkSize) / 2);
		if(x / chunkSize * chunkSize == x){
			COLOR.ra += vec2(0.5, 0.25);
		}
		else if(y / chunkSize * chunkSize == y){
			COLOR.ra += vec2(0.5, 0.25);
		}
		else{
			COLOR = vec4(0.0,0.0,0.0,0.1);
		}
	}
	
}"
